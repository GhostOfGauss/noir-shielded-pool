import { expect } from "chai";
import { Asset } from "../asset";
import { PublicKey, SecretKey } from "../keypair";
import { PreUtxo, Utxo } from "../utxo";

const sampleAsset = new Asset(1, 3);

// Sample data generated by nargo, see circuit/acir/keypair_acir.txt
const sampleSk = new SecretKey(BigInt(2), BigInt(0));
const samplePk = new PublicKey(
  BigInt("0x6ce1b0827aafa85ddeb49cdaa36306d19a74caa311e13d46d8bc688cdbffffe"),
  BigInt("0x1c122f81a3a14964909ede0ba2a6855fc93faf6fa1a788bf467be7e7a43f80ac"),
  false
);

const sampleRandomness = BigInt(10);

describe("UTXO", () => {
  let utxo: Utxo;

  beforeEach(() => {
    const preUtxo = new PreUtxo(sampleAsset, samplePk, sampleRandomness);
    utxo = new Utxo(preUtxo);
  });

  it(`Noir UTXO commitment compatibility`, () => {
    console.log(`Utxo commitment: ${utxo.commitment.toString(16)}`);
    const expectedUtxoCommitment = BigInt(
      "0x2783b1b42583d50c8790f0cc009663c8f5663c35c6bd0af694f483ea8efa4573"
    );
    expect(utxo.commitment === expectedUtxoCommitment).to.equal(true);
  });

  it(`Noir UTXO nullifier compatibility`, () => {
    let nullifier = utxo.nullify(sampleSk);
    console.log(`computed nullifier: ${nullifier.toString(16)}`);
    const expectedUtxoNulifier = BigInt(
      "0x2ec3fae46ba68ecb1de2050a46f706b607cf5ccb309055e0b9021cb927c5b4c1"
    );
    expect(nullifier === expectedUtxoNulifier).to.equal(true);
  });
});
